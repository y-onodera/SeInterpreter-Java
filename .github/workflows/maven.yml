# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        java-package: 'jdk+fx'
        distribution: 'zulu'
        cache: maven
    - name: Build with Maven
      run: mvn package test allure:report -Pbuild -fjava/pom.xml
      shell: cmd
    - name: Upload TestReport
      uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: unitTestReport
        path: ./java/target/site
    - name: Upload jar
      uses: actions/upload-artifact@v3
      with:
        name: executableJar
        path: ./java/target/**jar-with-dependencies.jar

  jlink:
    strategy:
      matrix:
        os: [windows-latest ,ubuntu-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          java-package: 'jdk+fx'
          distribution: 'zulu'
          cache: maven
      - name: jlink
        run: jlink --module-path "%JAVA_HOME%\jmods" --add-modules java`.base,java`.compiler,java`.datatransfer,java`.xml,java`.prefs,java`.desktop,java`.logging,java`.management,java`.security`.sasl,java`.naming,java`.rmi,java`.scripting,java`.security`.jgss,java`.transaction`.xa,java`.sql,jdk`.unsupported,jdk`.charsets,javafx`.base,javafx`.graphics,javafx`.controls,javafx`.fxml,java`.net`.http --compress=2 --output jre
        shell: pwsh
      - name: Upload jre
        uses: actions/upload-artifact@v3
        with:
          name: jre-${{matrix.os}}
          path: jre

  report-deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Ô∏è
        uses: actions/checkout@v3
      - name: Download unitTestReport
        uses: actions/download-artifact@v3
        with:
          name: unitTestReport
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4.4.1
        with:
          branch: gh-pages
          folder: 'allure-maven-plugin'

  remote-browser-test:
    needs: [build ,jlink]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome ,edge ,firefox]
    services:
      selenium-hub:
        image: selenium/hub
        ports:
          - 4442:4442
          - 4443:4443
          - 4444:4444
      selenium-node:
        image: selenium/node-${{matrix.browser}}
        env:
          SE_EVENT_BUS_HOST: selenium-hub
          SE_EVENT_BUS_PUBLISH_PORT: 4442
          SE_EVENT_BUS_SUBSCRIBE_PORT: 4443
        options :
          --shm-size=2gb
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download jre
        uses: actions/download-artifact@v3
        with:
          name: jre-ubuntu-latest
      - name: permmit access
        run:  chmod +x ./bin/java
      - name: Download executableJar
        uses: actions/download-artifact@v3
        with:
          name: executableJar
      - name: browser-test
        run: ./bin/java -cp sebuilder-interpreter-2.0.0-SNAPSHOT-jar-with-dependencies.jar com.sebuilder.interpreter.application.SeInterpreter --env=test/suite/env.properties --driver=${{matrix.browser}} --resultoutput=${{matrix.browser}} --driver.remote-url=http://localhost:4444/ --datasource.directory=test/suite/input --reportFormat=ExtentReports --aspectFile=test/suite/aspect/saveScreenshot.json test/suite/testsuite.json
      - name: Upload result
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: remote-${{matrix.browser}}-result
          path: ${{matrix.browser}}

  locale-browser-test:
    needs: [build ,jlink]
    runs-on: windows-2019
    strategy:
      matrix:
        browser: [chrome ,edge]
        include:
          - browser: chrome
          - browser: edge
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          java-package: 'jdk+fx'
          distribution: 'zulu'
          cache: maven
      - uses: browser-actions/setup-chrome@latest
        if: matrix.browser == 'chrome'
      - uses: browser-actions/setup-edge@latest
        if: matrix.browser == 'edge'
      - name: Download jre
        uses: actions/download-artifact@v3
        with:
          name: jre-windows-latest
      - name: Download executableJar
        uses: actions/download-artifact@v3
        with:
          name: executableJar
      - name: browser-test
        run: bin\java -cp sebuilder-interpreter-2.0.0-SNAPSHOT-jar-with-dependencies.jar com.sebuilder.interpreter.application.SeInterpreter --env.verifyImage=false --driver=${{matrix.browser}} --resultoutput=${{matrix.browser}} --datasource.directory=test/suite/input --aspectFile=test/suite/aspect/saveScreenshot.json test/suite/testsuite.json
        shell: cmd
      - name: Upload result
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: locale-${{matrix.browser}}-result
          path: ${{matrix.browser}}
